import type { GetStaticProps, NextPage } from "next"
import Head from "next/head"
import { useState } from "react"
import { translateWatcher } from "../components/FetchHandlers/translateWatcher"
import { LanguageBar } from "../components/LanguageBar"
import { TranslateBar } from "../components/TranslateBar"
import styles from "../styles/Home.module.css"
import { Email, GitHub } from "@mui/icons-material"
import { IconContainer } from "../components/IconContainer"

type Props = {
  languages: Array<{ language: string; name: string }>
  api_key: string
}

const Home: NextPage = (props) => {
  const { languages, api_key } = props as Props
  const [toTranslateData, setToTranslateData] = useState<string>("")
  const [translatedData, setTranslatedData] = useState<string>("")

  const [targetLanguage, setTargetLanguage] = useState<string>("en")
  const [sourceLanguage, setSourceLanguage] = useState<string>("pl")

  translateWatcher({
    toTranslateData,
    sourceLanguage,
    targetLanguage,
    setTranslatedData,
    setSourceLanguage,
    api_key,
  })

  return (
    <div className={styles.container}>
      <Head>
        <title>Google Cload Translate</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Translator jÄ™zykowy!</h1>

        <p className={styles.description}>
          Wykorzystane technologie:{" "}
          <code className={styles.code}>
            React + NextJS, TS, GoogleCloadTranslateApi
          </code>
        </p>

        <LanguageBar
          {...{
            languages,
            targetLanguage,
            setTargetLanguage,
            sourceLanguage,
            setSourceLanguage,
          }}
        />
        <TranslateBar {...{ translatedData, setToTranslateData }} />
      </main>

      <footer className={styles.footer}>
        &copy;Sebastian Drejkarz
        <IconContainer href={"https://github.com/Vampiromierz"} color="black">
          <GitHub />
        </IconContainer>
        <IconContainer
          href={"sdrejkarz90@gmail.com"}
          color="blue"
          mailTo={true}
        >
          <Email />
        </IconContainer>
      </footer>
    </div>
  )
}

// static generate page to get all language options only with one fetch by server
export const getStaticProps: GetStaticProps = async (context) => {
  const api_key = process.env.GOOGLE_API_KEY
  const res = await fetch(
    `https://translation.googleapis.com/language/translate/v2/languages?key=${api_key}`,
    { body: JSON.stringify({ target: "pl" }), method: "POST" }
  )
  const data = await res.json()

  if (!data || data.error) {
    return {
      props: { notFound: true },
      revalidate: 60 * 60, // refetch data every hour if response is invalid
    }
  }

  const languages = data.data.languages

  return {
    props: { languages, api_key },
    revalidate: 24 * 60 * 60 * 7, // refetch data once a week
  }
}

export default Home
